{:tasks
 {makedeps
  {:doc
   "Post-processes deps.edn"
   :requires
   ([clojure.edn :as edn]
    [clojure.set :as set])
   :task
   (let [deps
         (-> *command-line-args*
           (first)
           (or "deps.edn")
           (slurp)
           (edn/read-string))

         secret
         (try
           (-> *command-line-args*
             (second)
             (or "secret-deps.edn")
             (slurp)
             (edn/read-string))
           (catch Exception _))

         all-deps (merge-with merge deps secret)

         lite (-> #{:lib/pretty-errors
                    :imre/hashp
                    :imre/profile
                    :lib/reveal
                    :performance/benchmark}
                (sort))

         full (-> #{:alpha/reflect
                    :imre/decompile
                    :performance/memory-meter
                    :imre/speculative
                    :imre/trace
                    :inspect/portal-cli}
                (into lite)
                (sort))

         alias-recipes
         {:cursive/user-lite lite
          :cursive/user-full full}

         recipe->alias
         (fn [recipe]
           (-> all-deps
             (:aliases)
             ((apply juxt recipe))
             (->> (reduce (fn [acc m]
                            (merge-with
                              (fn [a b]
                                (cond
                                  (map? a) (merge a b)
                                  (sequential? a) (into a b)
                                  :else b))
                              acc m))))
             (select-keys [:extra-deps :jvm-opts])))

         copy-over
         [:imre/outdated
          :inspect.reveal/prepl
          :test/cognitect
          :test/run]]
     (-> all-deps
       (select-keys [:aliases])
       (update :aliases select-keys (into copy-over full))
       (update :aliases
         into (map (juxt key (comp recipe->alias val))) alias-recipes)
       (prn)
       (->> (binding [*print-namespace-maps* false]))))}}}
